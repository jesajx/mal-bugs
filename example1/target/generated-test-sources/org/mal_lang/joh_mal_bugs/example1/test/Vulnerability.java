package org.mal_lang.joh_mal_bugs.example1.test;

import core.Asset;
import core.AttackStep;
import core.AttackStepMax;
import core.AttackStepMin;
import core.Defense;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;

public abstract class Vulnerability extends Asset {
  public UserInteracts userInteracts;

  public Remove remove;

  public AttemptAbuse attemptAbuse;

  public Abuse abuse;

  public Impact impact;

  private Set<Application> _cachereverseallAutomaticVulnerabilitiesApplication;

  public Object object = null;

  public System system = null;

  public Application application = null;

  public SoftwareProduct softwareProduct = null;

  public Set<Exploit> exploits = new HashSet<>();

  public Vulnerability(String name, boolean isUserInteractsEnabled, boolean isRemoveEnabled) {
    super(name);
    assetClassName = "Vulnerability";
    if (userInteracts != null) {
      AttackStep.allAttackSteps.remove(userInteracts.disable);
    }
    Defense.allDefenses.remove(userInteracts);
    userInteracts = new UserInteracts(name, isUserInteractsEnabled);
    if (remove != null) {
      AttackStep.allAttackSteps.remove(remove.disable);
    }
    Defense.allDefenses.remove(remove);
    remove = new Remove(name, isRemoveEnabled);
    AttackStep.allAttackSteps.remove(attemptAbuse);
    attemptAbuse = new AttemptAbuse(name);
    AttackStep.allAttackSteps.remove(abuse);
    abuse = new Abuse(name);
    AttackStep.allAttackSteps.remove(impact);
    impact = new Impact(name);
  }

  public Vulnerability(String name) {
    super(name);
    assetClassName = "Vulnerability";
    if (userInteracts != null) {
      AttackStep.allAttackSteps.remove(userInteracts.disable);
    }
    Defense.allDefenses.remove(userInteracts);
    userInteracts = new UserInteracts(name, false);
    if (remove != null) {
      AttackStep.allAttackSteps.remove(remove.disable);
    }
    Defense.allDefenses.remove(remove);
    remove = new Remove(name, false);
    AttackStep.allAttackSteps.remove(attemptAbuse);
    attemptAbuse = new AttemptAbuse(name);
    AttackStep.allAttackSteps.remove(abuse);
    abuse = new Abuse(name);
    AttackStep.allAttackSteps.remove(impact);
    impact = new Impact(name);
  }

  public Vulnerability(boolean isUserInteractsEnabled, boolean isRemoveEnabled) {
    this("Anonymous", isUserInteractsEnabled, isRemoveEnabled);
  }

  public Vulnerability() {
    this("Anonymous");
  }

  protected Set<Application> _reverseallAutomaticVulnerabilitiesApplication() {
    if (_cachereverseallAutomaticVulnerabilitiesApplication == null) {
      _cachereverseallAutomaticVulnerabilitiesApplication = new HashSet<>();
      Set<Application> _6 = new HashSet<>();
      Set<Application> _7 = new HashSet<>();
      if (Vulnerability.this instanceof UnknownVulnerability) {
        for (var _8 : ((org.mal_lang.joh_mal_bugs.example1.test.UnknownVulnerability) Vulnerability.this)._reverseallUnknownVulnerabilitiesApplication()) {
          _6.add(_8);
        }
      }
      Set<Application> _9 = new HashSet<>();
      Set<Application> _a = new HashSet<>();
      if (Vulnerability.this instanceof ManuallyModeledVulnerability) {
        for (var _b : ((org.mal_lang.joh_mal_bugs.example1.test.ManuallyModeledVulnerability) Vulnerability.this)._reverseallManualVulnerabilitiesApplication()) {
          _9.add(_b);
        }
      }
      Set<Application> _c = new HashSet<>();
      Set<Application> _d = new HashSet<>();
      if (softwareProduct != null) {
        for (Application _e : softwareProduct.softApplications) {
          _c.add(_e);
        }
      }
      if (application != null) {
        _d.add(application);
      }
      _c.addAll(_d);
      for (Application _f : _c) {
        _a.add(_f);
      }
      _9.removeAll(_a);
      for (Application _10 : _9) {
        _7.add(_10);
      }
      _6.removeAll(_7);
      for (Application _11 : _6) {
        _cachereverseallAutomaticVulnerabilitiesApplication.add(_11);
      }
    }
    return _cachereverseallAutomaticVulnerabilitiesApplication;
  }

  public void addObject(Object object) {
    this.object = object;
    object.objvulnerabilities.add(this);
  }

  public void addSystem(System system) {
    this.system = system;
    system.sysvulnerabilities.add(this);
  }

  public void addApplication(Application application) {
    this.application = application;
    application.vulnerabilities.add(this);
  }

  public void addSoftwareProduct(SoftwareProduct softwareProduct) {
    this.softwareProduct = softwareProduct;
    softwareProduct.softProductVulnerabilities.add(this);
  }

  public void addExploits(Exploit exploits) {
    this.exploits.add(exploits);
    exploits.vulnerability = this;
  }

  @Override
  public String getAssociatedAssetClassName(String field) {
    if (field.equals("object")) {
      return Object.class.getName();
    } else if (field.equals("system")) {
      return System.class.getName();
    } else if (field.equals("application")) {
      return Application.class.getName();
    } else if (field.equals("softwareProduct")) {
      return SoftwareProduct.class.getName();
    } else if (field.equals("exploits")) {
      return Exploit.class.getName();
    }
    return "";
  }

  @Override
  public Set<Asset> getAssociatedAssets(String field) {
    Set<Asset> assets = new HashSet<>();
    if (field.equals("object")) {
      if (object != null) {
        assets.add(object);
      }
    } else if (field.equals("system")) {
      if (system != null) {
        assets.add(system);
      }
    } else if (field.equals("application")) {
      if (application != null) {
        assets.add(application);
      }
    } else if (field.equals("softwareProduct")) {
      if (softwareProduct != null) {
        assets.add(softwareProduct);
      }
    } else if (field.equals("exploits")) {
      assets.addAll(exploits);
    }
    return assets;
  }

  @Override
  public Set<Asset> getAllAssociatedAssets() {
    Set<Asset> assets = new HashSet<>();
    if (object != null) {
      assets.add(object);
    }
    if (system != null) {
      assets.add(system);
    }
    if (application != null) {
      assets.add(application);
    }
    if (softwareProduct != null) {
      assets.add(softwareProduct);
    }
    assets.addAll(exploits);
    return assets;
  }

  @Override
  public HashMap<String, HashSet<Asset>> getFields() {
    var fields = super.getFields();
    fields.put("object", new HashSet<Asset>());
    if (object != null) {
      fields.get("object").add(object);
    }
    fields.put("system", new HashSet<Asset>());
    if (system != null) {
      fields.get("system").add(system);
    }
    fields.put("application", new HashSet<Asset>());
    if (application != null) {
      fields.get("application").add(application);
    }
    fields.put("softwareProduct", new HashSet<Asset>());
    if (softwareProduct != null) {
      fields.get("softwareProduct").add(softwareProduct);
    }
    fields.put("exploits", new HashSet<Asset>());
    fields.get("exploits").addAll(exploits);
    return fields;
  }

  public class UserInteracts extends Defense {
    public UserInteracts(String name) {
      this(name, false);
    }

    public UserInteracts(String name, Boolean isEnabled) {
      super(name);
      defaultValue = isEnabled;
      disable = new Disable(name);
    }

    public class Disable extends AttackStepMin {
      public Disable(String name) {
        super(name);
      }

      @Override
      public String fullName() {
        return "Vulnerability.userInteracts";
      }
    }
  }

  public class Remove extends Defense {
    public Remove(String name) {
      this(name, false);
    }

    public Remove(String name, Boolean isEnabled) {
      super(name);
      defaultValue = isEnabled;
      disable = new Disable(name);
    }

    public class Disable extends AttackStepMin {
      private Set<AttackStep> _cacheChildrenRemove;

      public Disable(String name) {
        super(name);
      }

      @Override
      public void updateChildren(Set<AttackStep> attackSteps) {
        if (_cacheChildrenRemove == null) {
          _cacheChildrenRemove = new HashSet<>();
          _cacheChildrenRemove.add(abuse);
        }
        for (AttackStep attackStep : _cacheChildrenRemove) {
          attackStep.updateTtc(this, ttc, attackSteps);
        }
      }

      @Override
      public Set<AttackStep> getAttackStepChildren() {
        var tmp = super.getAttackStepChildren();
        tmp.add(abuse);
        return tmp;
      }

      @Override
      public String fullName() {
        return "Vulnerability.remove";
      }
    }
  }

  public class AttemptAbuse extends AttackStepMin {
    private Set<AttackStep> _cacheChildrenAttemptAbuse;

    private Set<AttackStep> _cacheParentAttemptAbuse;

    public AttemptAbuse(String name) {
      super(name);
    }

    @Override
    public void updateChildren(Set<AttackStep> attackSteps) {
      if (_cacheChildrenAttemptAbuse == null) {
        _cacheChildrenAttemptAbuse = new HashSet<>();
        _cacheChildrenAttemptAbuse.add(abuse);
      }
      for (AttackStep attackStep : _cacheChildrenAttemptAbuse) {
        attackStep.updateTtc(this, ttc, attackSteps);
      }
    }

    @Override
    public Set<AttackStep> getAttackStepChildren() {
      var tmp = super.getAttackStepChildren();
      tmp.add(abuse);
      return tmp;
    }

    @Override
    public void setExpectedParents() {
      super.setExpectedParents();
      if (_cacheParentAttemptAbuse == null) {
        _cacheParentAttemptAbuse = new HashSet<>();
        if (object != null) {
          _cacheParentAttemptAbuse.add(object.attemptUseVulnerability);
        }
        if (system != null) {
          _cacheParentAttemptAbuse.add(system.attemptUsePhysicalVulnerability);
        }
        if (Vulnerability.this instanceof ManuallyModeledVulnerability) {
          for (var _0 : ((org.mal_lang.joh_mal_bugs.example1.test.ManuallyModeledVulnerability) Vulnerability.this)._reverseallManualVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_0.useVulnerability);
          }
        }
        if (Vulnerability.this instanceof UnknownVulnerability) {
          for (var _1 : ((org.mal_lang.joh_mal_bugs.example1.test.UnknownVulnerability) Vulnerability.this)._reverseallUnknownVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_1.useVulnerability);
          }
        }
        if (Vulnerability.this instanceof LLNNVulnerability) {
          for (var _2 : ((org.mal_lang.joh_mal_bugs.example1.test.LLNNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_2.attemptLocalConnectVuln);
          }
        }
        if (Vulnerability.this instanceof LLNRVulnerability) {
          for (var _3 : ((org.mal_lang.joh_mal_bugs.example1.test.LLNRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_3.attemptLocalConnectVuln);
          }
        }
        if (Vulnerability.this instanceof LHNNVulnerability) {
          for (var _4 : ((org.mal_lang.joh_mal_bugs.example1.test.LHNNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_4.attemptLocalConnectVuln);
          }
        }
        if (Vulnerability.this instanceof LHNRVulnerability) {
          for (var _5 : ((org.mal_lang.joh_mal_bugs.example1.test.LHNRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_5.attemptLocalConnectVuln);
          }
        }
        if (Vulnerability.this instanceof NLNNVulnerability) {
          for (var _6 : ((org.mal_lang.joh_mal_bugs.example1.test.NLNNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_6.attemptNetworkRequestRespondConnectVuln);
          }
        }
        if (Vulnerability.this instanceof NLNRVulnerability) {
          for (var _7 : ((org.mal_lang.joh_mal_bugs.example1.test.NLNRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_7.attemptNetworkRequestRespondConnectVuln);
          }
        }
        if (Vulnerability.this instanceof NLLNVulnerability) {
          for (var _8 : ((org.mal_lang.joh_mal_bugs.example1.test.NLLNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_8.attemptNetworkRequestRespondConnectVuln);
          }
        }
        if (Vulnerability.this instanceof NLLRVulnerability) {
          for (var _9 : ((org.mal_lang.joh_mal_bugs.example1.test.NLLRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_9.attemptNetworkRequestRespondConnectVuln);
          }
        }
        if (Vulnerability.this instanceof NLHNVulnerability) {
          for (var _a : ((org.mal_lang.joh_mal_bugs.example1.test.NLHNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_a.attemptNetworkRequestRespondConnectVuln);
          }
        }
        if (Vulnerability.this instanceof NLHRVulnerability) {
          for (var _b : ((org.mal_lang.joh_mal_bugs.example1.test.NLHRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_b.attemptNetworkRequestRespondConnectVuln);
          }
        }
        if (Vulnerability.this instanceof NHNNVulnerability) {
          for (var _c : ((org.mal_lang.joh_mal_bugs.example1.test.NHNNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_c.attemptNetworkRequestRespondConnectVuln);
          }
        }
        if (Vulnerability.this instanceof NHNRVulnerability) {
          for (var _d : ((org.mal_lang.joh_mal_bugs.example1.test.NHNRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_d.attemptNetworkRequestRespondConnectVuln);
          }
        }
        if (Vulnerability.this instanceof NHLNVulnerability) {
          for (var _e : ((org.mal_lang.joh_mal_bugs.example1.test.NHLNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_e.attemptNetworkRequestRespondConnectVuln);
          }
        }
        if (Vulnerability.this instanceof NHLRVulnerability) {
          for (var _f : ((org.mal_lang.joh_mal_bugs.example1.test.NHLRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_f.attemptNetworkRequestRespondConnectVuln);
          }
        }
        if (Vulnerability.this instanceof NHHNVulnerability) {
          for (var _10 : ((org.mal_lang.joh_mal_bugs.example1.test.NHHNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_10.attemptNetworkRequestRespondConnectVuln);
          }
        }
        if (Vulnerability.this instanceof NHHRVulnerability) {
          for (var _11 : ((org.mal_lang.joh_mal_bugs.example1.test.NHHRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_11.attemptNetworkRequestRespondConnectVuln);
          }
        }
        if (Vulnerability.this instanceof LLLNVulnerability) {
          for (var _12 : ((org.mal_lang.joh_mal_bugs.example1.test.LLLNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_12.attemptLocalLowPrivVuln);
          }
        }
        if (Vulnerability.this instanceof LLLRVulnerability) {
          for (var _13 : ((org.mal_lang.joh_mal_bugs.example1.test.LLLRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_13.attemptLocalLowPrivVuln);
          }
        }
        if (Vulnerability.this instanceof LHLNVulnerability) {
          for (var _14 : ((org.mal_lang.joh_mal_bugs.example1.test.LHLNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_14.attemptLocalLowPrivVuln);
          }
        }
        if (Vulnerability.this instanceof LHLRVulnerability) {
          for (var _15 : ((org.mal_lang.joh_mal_bugs.example1.test.LHLRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_15.attemptLocalLowPrivVuln);
          }
        }
        if (Vulnerability.this instanceof LLHRVulnerability) {
          for (var _16 : ((org.mal_lang.joh_mal_bugs.example1.test.LLHRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_16.attemptLocalHighPrivVuln);
          }
        }
        if (Vulnerability.this instanceof LLHNVulnerability) {
          for (var _17 : ((org.mal_lang.joh_mal_bugs.example1.test.LLHNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_17.attemptLocalHighPrivVuln);
          }
        }
        if (Vulnerability.this instanceof LHHNVulnerability) {
          for (var _18 : ((org.mal_lang.joh_mal_bugs.example1.test.LHHNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_18.attemptLocalHighPrivVuln);
          }
        }
        if (Vulnerability.this instanceof LHHRVulnerability) {
          for (var _19 : ((org.mal_lang.joh_mal_bugs.example1.test.LHHRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
            _cacheParentAttemptAbuse.add(_19.attemptLocalHighPrivVuln);
          }
        }
      }
      for (AttackStep attackStep : _cacheParentAttemptAbuse) {
        addExpectedParent(attackStep);
      }
    }

    @Override
    public Set<AttackStep> getAttackStepParents() {
      var tmp = super.getAttackStepParents();
      if (object != null) {
        tmp.add(object.attemptUseVulnerability);
      }
      if (system != null) {
        tmp.add(system.attemptUsePhysicalVulnerability);
      }
      if (Vulnerability.this instanceof ManuallyModeledVulnerability) {
        for (var _1a : ((org.mal_lang.joh_mal_bugs.example1.test.ManuallyModeledVulnerability) Vulnerability.this)._reverseallManualVulnerabilitiesApplication()) {
          tmp.add(_1a.useVulnerability);
        }
      }
      if (Vulnerability.this instanceof UnknownVulnerability) {
        for (var _1b : ((org.mal_lang.joh_mal_bugs.example1.test.UnknownVulnerability) Vulnerability.this)._reverseallUnknownVulnerabilitiesApplication()) {
          tmp.add(_1b.useVulnerability);
        }
      }
      if (Vulnerability.this instanceof LLNNVulnerability) {
        for (var _1c : ((org.mal_lang.joh_mal_bugs.example1.test.LLNNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_1c.attemptLocalConnectVuln);
        }
      }
      if (Vulnerability.this instanceof LLNRVulnerability) {
        for (var _1d : ((org.mal_lang.joh_mal_bugs.example1.test.LLNRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_1d.attemptLocalConnectVuln);
        }
      }
      if (Vulnerability.this instanceof LHNNVulnerability) {
        for (var _1e : ((org.mal_lang.joh_mal_bugs.example1.test.LHNNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_1e.attemptLocalConnectVuln);
        }
      }
      if (Vulnerability.this instanceof LHNRVulnerability) {
        for (var _1f : ((org.mal_lang.joh_mal_bugs.example1.test.LHNRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_1f.attemptLocalConnectVuln);
        }
      }
      if (Vulnerability.this instanceof NLNNVulnerability) {
        for (var _20 : ((org.mal_lang.joh_mal_bugs.example1.test.NLNNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_20.attemptNetworkRequestRespondConnectVuln);
        }
      }
      if (Vulnerability.this instanceof NLNRVulnerability) {
        for (var _21 : ((org.mal_lang.joh_mal_bugs.example1.test.NLNRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_21.attemptNetworkRequestRespondConnectVuln);
        }
      }
      if (Vulnerability.this instanceof NLLNVulnerability) {
        for (var _22 : ((org.mal_lang.joh_mal_bugs.example1.test.NLLNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_22.attemptNetworkRequestRespondConnectVuln);
        }
      }
      if (Vulnerability.this instanceof NLLRVulnerability) {
        for (var _23 : ((org.mal_lang.joh_mal_bugs.example1.test.NLLRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_23.attemptNetworkRequestRespondConnectVuln);
        }
      }
      if (Vulnerability.this instanceof NLHNVulnerability) {
        for (var _24 : ((org.mal_lang.joh_mal_bugs.example1.test.NLHNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_24.attemptNetworkRequestRespondConnectVuln);
        }
      }
      if (Vulnerability.this instanceof NLHRVulnerability) {
        for (var _25 : ((org.mal_lang.joh_mal_bugs.example1.test.NLHRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_25.attemptNetworkRequestRespondConnectVuln);
        }
      }
      if (Vulnerability.this instanceof NHNNVulnerability) {
        for (var _26 : ((org.mal_lang.joh_mal_bugs.example1.test.NHNNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_26.attemptNetworkRequestRespondConnectVuln);
        }
      }
      if (Vulnerability.this instanceof NHNRVulnerability) {
        for (var _27 : ((org.mal_lang.joh_mal_bugs.example1.test.NHNRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_27.attemptNetworkRequestRespondConnectVuln);
        }
      }
      if (Vulnerability.this instanceof NHLNVulnerability) {
        for (var _28 : ((org.mal_lang.joh_mal_bugs.example1.test.NHLNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_28.attemptNetworkRequestRespondConnectVuln);
        }
      }
      if (Vulnerability.this instanceof NHLRVulnerability) {
        for (var _29 : ((org.mal_lang.joh_mal_bugs.example1.test.NHLRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_29.attemptNetworkRequestRespondConnectVuln);
        }
      }
      if (Vulnerability.this instanceof NHHNVulnerability) {
        for (var _2a : ((org.mal_lang.joh_mal_bugs.example1.test.NHHNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_2a.attemptNetworkRequestRespondConnectVuln);
        }
      }
      if (Vulnerability.this instanceof NHHRVulnerability) {
        for (var _2b : ((org.mal_lang.joh_mal_bugs.example1.test.NHHRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_2b.attemptNetworkRequestRespondConnectVuln);
        }
      }
      if (Vulnerability.this instanceof LLLNVulnerability) {
        for (var _2c : ((org.mal_lang.joh_mal_bugs.example1.test.LLLNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_2c.attemptLocalLowPrivVuln);
        }
      }
      if (Vulnerability.this instanceof LLLRVulnerability) {
        for (var _2d : ((org.mal_lang.joh_mal_bugs.example1.test.LLLRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_2d.attemptLocalLowPrivVuln);
        }
      }
      if (Vulnerability.this instanceof LHLNVulnerability) {
        for (var _2e : ((org.mal_lang.joh_mal_bugs.example1.test.LHLNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_2e.attemptLocalLowPrivVuln);
        }
      }
      if (Vulnerability.this instanceof LHLRVulnerability) {
        for (var _2f : ((org.mal_lang.joh_mal_bugs.example1.test.LHLRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_2f.attemptLocalLowPrivVuln);
        }
      }
      if (Vulnerability.this instanceof LLHRVulnerability) {
        for (var _30 : ((org.mal_lang.joh_mal_bugs.example1.test.LLHRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_30.attemptLocalHighPrivVuln);
        }
      }
      if (Vulnerability.this instanceof LLHNVulnerability) {
        for (var _31 : ((org.mal_lang.joh_mal_bugs.example1.test.LLHNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_31.attemptLocalHighPrivVuln);
        }
      }
      if (Vulnerability.this instanceof LHHNVulnerability) {
        for (var _32 : ((org.mal_lang.joh_mal_bugs.example1.test.LHHNVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_32.attemptLocalHighPrivVuln);
        }
      }
      if (Vulnerability.this instanceof LHHRVulnerability) {
        for (var _33 : ((org.mal_lang.joh_mal_bugs.example1.test.LHHRVulnerability) Vulnerability.this)._reverseallAutomaticVulnerabilitiesApplication()) {
          tmp.add(_33.attemptLocalHighPrivVuln);
        }
      }
      return tmp;
    }

    @Override
    public double localTtc() {
      return ttcHashMap.get("Vulnerability.attemptAbuse");
    }
  }

  public class Abuse extends AttackStepMax {
    private Set<AttackStep> _cacheChildrenAbuse;

    private Set<AttackStep> _cacheParentAbuse;

    public Abuse(String name) {
      super(name);
    }

    @Override
    public void updateChildren(Set<AttackStep> attackSteps) {
      if (_cacheChildrenAbuse == null) {
        _cacheChildrenAbuse = new HashSet<>();
        for (Exploit _0 : exploits) {
          _cacheChildrenAbuse.add(_0.attemptExploit);
        }
      }
      for (AttackStep attackStep : _cacheChildrenAbuse) {
        attackStep.updateTtc(this, ttc, attackSteps);
      }
    }

    @Override
    public Set<AttackStep> getAttackStepChildren() {
      var tmp = super.getAttackStepChildren();
      for (Exploit _1 : exploits) {
        tmp.add(_1.attemptExploit);
      }
      return tmp;
    }

    @Override
    public void setExpectedParents() {
      super.setExpectedParents();
      if (_cacheParentAbuse == null) {
        _cacheParentAbuse = new HashSet<>();
        _cacheParentAbuse.add(remove.disable);
        _cacheParentAbuse.add(attemptAbuse);
        if (Vulnerability.this instanceof ManuallyModeledVulnerability) {
          _cacheParentAbuse.add(((org.mal_lang.joh_mal_bugs.example1.test.ManuallyModeledVulnerability) Vulnerability.this).userInteracts.disable);
        }
      }
      for (AttackStep attackStep : _cacheParentAbuse) {
        addExpectedParent(attackStep);
      }
    }

    @Override
    public Set<AttackStep> getAttackStepParents() {
      var tmp = super.getAttackStepParents();
      tmp.add(remove.disable);
      tmp.add(attemptAbuse);
      if (Vulnerability.this instanceof ManuallyModeledVulnerability) {
        tmp.add(((org.mal_lang.joh_mal_bugs.example1.test.ManuallyModeledVulnerability) Vulnerability.this).userInteracts.disable);
      }
      return tmp;
    }

    @Override
    public double localTtc() {
      return ttcHashMap.get("Vulnerability.abuse");
    }
  }

  public class Impact extends AttackStepMin {
    private Set<AttackStep> _cacheParentImpact;

    public Impact(String name) {
      super(name);
    }

    @Override
    public void setExpectedParents() {
      super.setExpectedParents();
      if (_cacheParentImpact == null) {
        _cacheParentImpact = new HashSet<>();
        for (Exploit _0 : exploits) {
          _cacheParentImpact.add(_0.attemptExploit);
        }
        for (Exploit _1 : exploits) {
          if (_1 instanceof ManualHighComplexityExploit) {
            _cacheParentImpact.add(((org.mal_lang.joh_mal_bugs.example1.test.ManualHighComplexityExploit) _1).attemptExploit);
          }
        }
        for (Exploit _2 : exploits) {
          if (_2 instanceof ManualLowComplexityExploit) {
            _cacheParentImpact.add(((org.mal_lang.joh_mal_bugs.example1.test.ManualLowComplexityExploit) _2).attemptExploit);
          }
        }
      }
      for (AttackStep attackStep : _cacheParentImpact) {
        addExpectedParent(attackStep);
      }
    }

    @Override
    public Set<AttackStep> getAttackStepParents() {
      var tmp = super.getAttackStepParents();
      for (Exploit _3 : exploits) {
        tmp.add(_3.attemptExploit);
      }
      for (Exploit _4 : exploits) {
        if (_4 instanceof ManualHighComplexityExploit) {
          tmp.add(((org.mal_lang.joh_mal_bugs.example1.test.ManualHighComplexityExploit) _4).attemptExploit);
        }
      }
      for (Exploit _5 : exploits) {
        if (_5 instanceof ManualLowComplexityExploit) {
          tmp.add(((org.mal_lang.joh_mal_bugs.example1.test.ManualLowComplexityExploit) _5).attemptExploit);
        }
      }
      return tmp;
    }

    @Override
    public double localTtc() {
      return ttcHashMap.get("Vulnerability.impact");
    }
  }
}
