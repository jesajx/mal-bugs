package org.mal_lang.joh_mal_bugs.example1.test;

import core.AttackStep;
import core.Defense;
import java.lang.Boolean;
import java.lang.Override;
import java.lang.String;
import java.util.HashSet;
import java.util.Set;

public class NLHRVulnerability extends AutomaticLowComplexityVulnerability {
  public NLHRVulnerability(String name, boolean isUserInteractsEnabled, boolean isRemoveEnabled) {
    super(name, isUserInteractsEnabled, isRemoveEnabled);
    assetClassName = "NLHRVulnerability";
    if (userInteracts != null) {
      AttackStep.allAttackSteps.remove(userInteracts.disable);
    }
    Defense.allDefenses.remove(userInteracts);
    userInteracts = new UserInteracts(name, isUserInteractsEnabled);
  }

  public NLHRVulnerability(String name) {
    super(name);
    assetClassName = "NLHRVulnerability";
    if (userInteracts != null) {
      AttackStep.allAttackSteps.remove(userInteracts.disable);
    }
    Defense.allDefenses.remove(userInteracts);
    userInteracts = new UserInteracts(name, true);
  }

  public NLHRVulnerability(boolean isUserInteractsEnabled, boolean isRemoveEnabled) {
    this("Anonymous", isUserInteractsEnabled, isRemoveEnabled);
  }

  public NLHRVulnerability() {
    this("Anonymous");
  }

  public class UserInteracts extends Vulnerability.UserInteracts {
    public UserInteracts(String name) {
      this(name, true);
    }

    public UserInteracts(String name, Boolean isEnabled) {
      super(name);
      defaultValue = isEnabled;
      disable = new Disable(name);
    }

    public class Disable extends Vulnerability.UserInteracts.Disable {
      private Set<AttackStep> _cacheChildrenUserInteracts;

      public Disable(String name) {
        super(name);
      }

      @Override
      public void updateChildren(Set<AttackStep> attackSteps) {
        if (_cacheChildrenUserInteracts == null) {
          _cacheChildrenUserInteracts = new HashSet<>();
          if (NLHRVulnerability.this instanceof NLHRVulnerability) {
            _cacheChildrenUserInteracts.add(((org.mal_lang.joh_mal_bugs.example1.test.NLHRVulnerability) NLHRVulnerability.this).abuse);
          }
        }
        for (AttackStep attackStep : _cacheChildrenUserInteracts) {
          attackStep.updateTtc(this, ttc, attackSteps);
        }
      }

      @Override
      public Set<AttackStep> getAttackStepChildren() {
        var tmp = super.getAttackStepChildren();
        if (NLHRVulnerability.this instanceof NLHRVulnerability) {
          tmp.add(((org.mal_lang.joh_mal_bugs.example1.test.NLHRVulnerability) NLHRVulnerability.this).abuse);
        }
        return tmp;
      }

      @Override
      public String fullName() {
        return "NLHRVulnerability.userInteracts";
      }
    }
  }
}
