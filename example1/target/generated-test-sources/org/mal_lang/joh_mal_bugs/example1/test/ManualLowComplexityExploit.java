package org.mal_lang.joh_mal_bugs.example1.test;

import core.AttackStep;
import java.lang.Override;
import java.lang.String;
import java.util.HashSet;
import java.util.Set;

public class ManualLowComplexityExploit extends Exploit {
  public ManualLowComplexityExploit(String name) {
    super(name);
    assetClassName = "ManualLowComplexityExploit";
    AttackStep.allAttackSteps.remove(attemptExploit);
    attemptExploit = new AttemptExploit(name);
  }

  public ManualLowComplexityExploit() {
    this("Anonymous");
  }

  public class AttemptExploit extends Exploit.AttemptExploit {
    private Set<AttackStep> _cacheChildrenAttemptExploit;

    public AttemptExploit(String name) {
      super(name);
    }

    @Override
    public void updateChildren(Set<AttackStep> attackSteps) {
      if (_cacheChildrenAttemptExploit == null) {
        _cacheChildrenAttemptExploit = new HashSet<>();
        if (ManualLowComplexityExploit.this instanceof ManualLowComplexityExploit) {
          if (((org.mal_lang.joh_mal_bugs.example1.test.ManualLowComplexityExploit) ManualLowComplexityExploit.this).vulnerability != null) {
            _cacheChildrenAttemptExploit.add(((org.mal_lang.joh_mal_bugs.example1.test.ManualLowComplexityExploit) ManualLowComplexityExploit.this).vulnerability.impact);
          }
        }
      }
      for (AttackStep attackStep : _cacheChildrenAttemptExploit) {
        attackStep.updateTtc(this, ttc, attackSteps);
      }
    }

    @Override
    public Set<AttackStep> getAttackStepChildren() {
      var tmp = super.getAttackStepChildren();
      if (ManualLowComplexityExploit.this instanceof ManualLowComplexityExploit) {
        if (((org.mal_lang.joh_mal_bugs.example1.test.ManualLowComplexityExploit) ManualLowComplexityExploit.this).vulnerability != null) {
          tmp.add(((org.mal_lang.joh_mal_bugs.example1.test.ManualLowComplexityExploit) ManualLowComplexityExploit.this).vulnerability.impact);
        }
      }
      return tmp;
    }

    @Override
    public double localTtc() {
      return ttcHashMap.get("ManualLowComplexityExploit.attemptExploit");
    }
  }
}
